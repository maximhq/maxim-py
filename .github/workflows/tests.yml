name: Run Tests

on:
  push:
    branches: [main,beta]
  pull_request:
    branches: [main,beta]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test-main:
    name: Test Main SDK (Python 3.9)
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v4

      - name: Backup pyproject.toml
        run: |
          cp pyproject.toml pyproject.toml.bak

      - name: Remove additional dependencies
        run: |
          sed -i.bak '/^additional_dev = \[$/,/]$/d' pyproject.toml

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python 3.9
        run: uv python install 3.9

      - name: Install dependencies (dev only)
        run: |
          uv sync --python 3.9

      - name: Run main tests (excluding CrewAI)
        env:
          MAXIM_API_KEY: ${{ secrets.MAXIM_API_KEY }}
          MAXIM_BASE_URL: ${{ secrets.MAXIM_BASE_URL }}
          MAXIM_DATASET_ID: ${{ secrets.MAXIM_DATASET_ID }}
          MAXIM_WORKSPACE_ID: ${{ secrets.MAXIM_WORKSPACE_ID }}
          MAXIM_LOG_REPO_ID: ${{ secrets.MAXIM_LOG_REPO_ID }}
          MAXIM_PROMPT_CHAIN_VERSION_ID: ${{ secrets.MAXIM_PROMPT_CHAIN_VERSION_ID }}
          MAXIM_ASSISTANT_PROMPT_VERSION_ID: ${{ secrets.MAXIM_ASSISTANT_PROMPT_VERSION_ID }}
          MAXIM_ASSISTANT_PROMPT_CHAIN_VERSION_ID: ${{ secrets.MAXIM_ASSISTANT_PROMPT_CHAIN_VERSION_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_KEY: ${{ secrets.AZURE_OPENAI_KEY }}
          PORTKEY_API_KEY: ${{ secrets.PORTKEY_API_KEY }}
          PORTKEY_VIRTUAL_KEY: ${{ secrets.PORTKEY_VIRTUAL_KEY }}
          LLAMAINDEX_API_KEY: ${{ secrets.LLAMAINDEX_API_KEY }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          MAXIM_PROMPT_1_ID: ${{ secrets.MAXIM_PROMPT_1_ID }}
          MAXIM_PROMPT_2_ID: ${{ secrets.MAXIM_PROMPT_2_ID }}
          MAXIM_PROMPT_3_ID: ${{ secrets.MAXIM_PROMPT_3_ID }}
          MAXIM_PROMPT_1_VERSION_1_ID: ${{ secrets.MAXIM_PROMPT_1_VERSION_1_ID }}
          MAXIM_PROMPT_1_VERSION_3_ID: ${{ secrets.MAXIM_PROMPT_1_VERSION_3_ID }}
          MAXIM_PROMPT_1_VERSION_4_ID: ${{ secrets.MAXIM_PROMPT_1_VERSION_4_ID }}
          MAXIM_PROMPT_1_VERSION_5_ID: ${{ secrets.MAXIM_PROMPT_1_VERSION_5_ID }}
          MAXIM_FOLDER_1_ID: ${{ secrets.MAXIM_FOLDER_1_ID }}
          MAXIM_FOLDER_2_ID: ${{ secrets.MAXIM_FOLDER_2_ID }}
          MAXIM_TEST_RUN_PROMPT_VERSION_ID: ${{ secrets.MAXIM_TEST_RUN_PROMPT_VERSION_ID }}
          MAXIM_TEST_RUN_ASSISTANT_PROMPT_VERSION_ID: ${{ secrets.MAXIM_TEST_RUN_ASSISTANT_PROMPT_VERSION_ID }}
          MAXIM_TEST_RUN_ASSISTANT_PROMPT_CHAIN_VERSION_ID: ${{ secrets.MAXIM_TEST_RUN_ASSISTANT_PROMPT_CHAIN_VERSION_ID }}
        run: |
          uv run pytest maxim/tests/test_prompts.py maxim/tests/test_openai.py maxim/tests/test_llamaindex.py maxim/tests/test_together.py maxim/tests/test_fireworks.py maxim/tests/test_groq.py maxim/tests/test_add_dataset_entries_comprehensive.py maxim/tests/test_maxim_core_simple.py --junitxml=junit/main-test-results.xml

      - name: Upload main test results
        uses: actions/upload-artifact@v4
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: main-test-results
          path: junit/main-test-results.xml

      - name: Publish main test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success() || failure()    # run this step even if previous step failed
        with:
          junit_files: "junit/main-test-results.xml"
          check_name: "Main Test Results"

      - name: Restore pyproject.toml
        run: |
          mv pyproject.toml.bak pyproject.toml

  additional-tests:
    name: Test Additional Integrations (Python 3.10)
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python 3.10
        run: uv python install 3.10

      - name: Install dependencies (CrewAI only)
        run: |
          uv sync --python 3.10

      - name: Run additional integration tests
        run: |
          uv run pytest maxim/tests/test_crewai.py --junitxml=junit/additional-test-results.xml

      - name: Upload additional test results
        uses: actions/upload-artifact@v4
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: additional-test-results
          path: junit/additional-test-results.xml

      - name: Publish additional test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success() || failure()    # run this step even if previous step failed
        with:
          junit_files: "junit/additional-test-results.xml"
          check_name: "Additional Test Results"
